package ${package};

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.jdo.PersistenceManager;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;





import com.akjava.lib.common.form.page.PageMenuHtmlMaker;
import com.akjava.lib.common.form.page.PagingInfoImpl;
import com.akjava.lib.common.utils.TemplateUtils;
import com.akjava.servlet.AbstractSimpleTemplateServlet;
import com.akjava.servlet.ServletUtils;
import com.akjava.servlet.SimpleTemplateUtils;

import ${basePackage}*;





public class  ${className}  extends  AbstractSimpleTemplateServlet{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	@Override
	protected String initializeHtmlTitle() {
		return "${title}";
	}

	@Override
	protected String initializeBaseTemplateHtmlName() {
		return "${baseTemplate}";
	}

	@Override
	protected String initializeMainTemplateHtmlName() {
		return "${mainTemplate}";
	}
	@Override
	protected boolean initializeUseCache() {
		return ${useCache};
	}

	

	@Override
	protected String createMainHtml(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
			PersistenceManager manager=PMF.get().getPersistenceManager();
		
		String where="";
		String optionQuery="";
		${whereValues}
			
		
		${dataClassName}EntityDao dao=new ${dataClassName}EntityDao(manager);
		
		int page=ServletUtils.parsePageNumber(request, "page");
		int pageSize=${pageSize};
		
		int start=(page-1)*pageSize;
		
		List<${dataClassName}Entity> datas=dao.getDatas(start, pageSize,where, "${order_key}", ${order_asc});
		
		StringBuffer rowHtmls=new StringBuffer();
		String template=SimpleTemplateUtils.loadTextFromFile(getServletContext(),"${mainRowTemplate}");
		
		for(${dataClassName}Entity data:datas){
			Map<String,String> map=${dataClassName}Tools.toValueAndLabelMap(data);
			
			String html=TemplateUtils.createAdvancedText(template, map);
			rowHtmls.append(html);
		}
		
		dataMap.put("data", rowHtmls.toString());
		
		long count=dao.count(where);
		
		PageMenuHtmlMaker maker=new PageMenuHtmlMaker("${path}",optionQuery);
		String pageMenuHtml=maker.createPageMenuHtml(new PagingInfoImpl(page,count,pageSize));
		dataMap.put("pagemenu", pageMenuHtml);
		
		
		String dataHtml=SimpleTemplateUtils.createTextFromFile(getServletContext(), mainTemplateHtmlName, dataMap);
		return dataHtml;
	}
}